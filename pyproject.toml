[tool.poetry]
name = "licensematrix"
version = "2021"
description = "List of popular open source licenses with naive functions to determine compatibility and search for a license from a string"
authors = ["FredHappyface"]
classifiers = [
	"Environment :: Console",
	"Environment :: MacOS X",
	"Environment :: Win32 (MS Windows)",
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Intended Audience :: Education",
	"License :: OSI Approved :: MIT License",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.7",
	"Programming Language :: Python :: 3.8",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: Implementation :: CPython",
	"Topic :: Security",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities"
]
homepage = "https://github.com/FHPythonUtils/LicenseMatrix"
repository = "https://github.com/FHPythonUtils/LicenseMatrix"
documentation = "https://github.com/FHPythonUtils/LicenseMatrix/blob/master/README.md"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"

[tool.pylint.messages_control]
disable = ["too-many-instance-attributes", "too-many-arguments"]

[tool.pylint.format]
max-line-length = 100500
single-line-if-stmt = true
indent-string = "\t"
indent-after-paren = 4
expected-line-ending-format = "LF"
module-naming-style = "snake_case"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "camelCase"
method-naming-style = "camelCase"
argument-naming-style = "camelCase"
attr-naming-style = "camelCase"
variable-naming-style = "camelCase"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
